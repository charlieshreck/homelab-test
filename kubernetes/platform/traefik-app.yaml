# ==============================================================================
# Traefik Application - Standard Kubernetes Ingress Only
# ==============================================================================
# This configuration uses ONLY standard Kubernetes Ingress resources.
# Traefik CRDs (IngressRoute, Middleware, TLSStore) are DISABLED.
# All routing uses native Kubernetes Ingress API for maximum portability.
# ==============================================================================

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:  # Single source - Helm chart only
    repoURL: https://traefik.github.io/charts
    chart: traefik
    targetRevision: 37.1.2
    helm:
      valuesObject:
        # DO NOT install CRDs - we're using standard Ingress only
        installCRDs: false
        
        # Image configuration
        image:
          registry: docker.io
          repository: traefik
          tag: "v3.5.3"
          pullPolicy: IfNotPresent
        
        # Provider Configuration - ONLY Kubernetes Ingress (no CRDs)
        providers:
          kubernetesIngress:
            enabled: true  # ✅ Standard Kubernetes Ingress
            allowExternalNameServices: true
            allowEmptyServices: false
            publishedService:
              enabled: true
          kubernetesCRD:
            enabled: false  # ❌ DISABLED - using standard Ingress only
        
        # Service Configuration - MetalLB LoadBalancer
        service:
          enabled: true
          type: LoadBalancer
          annotations:
            metallb.universe.tf/loadBalancerIPs: "10.30.0.100"
        
        # Port Configuration - NEW V37 SYNTAX
        ports:
          # HTTP port (redirect to HTTPS)
          web:
            port: 8000
            expose:
              default: true
            exposedPort: 80
            protocol: TCP
            # NEW SYNTAX for v37+
            redirections:
              entryPoint:
                to: websecure
                scheme: https
                permanent: true
          
          # HTTPS port
          websecure:
            port: 8443
            expose:
              default: true
            exposedPort: 443
            protocol: TCP
            http3:
              enabled: false  # Disable HTTP/3 for stability
            tls:
              enabled: true
        
        # Additional arguments (simplified)
        additionalArguments:
          - "--providers.kubernetesingress.ingressclass=traefik"
        
        # TLS Configuration
        tlsOptions:
          default:
            minVersion: VersionTLS12
            sniStrict: false
            cipherSuites:
              - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
              - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
              - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
        
        # Resource limits
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 512Mi
        
        # Security context
        securityContext:
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
        
        # Pod configuration
        deployment:
          replicas: 2
          podAnnotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9000"
        
        # Logs
        logs:
          general:
            level: INFO
          access:
            enabled: true
            format: json
        
        # Metrics
        metrics:
          prometheus:
            entryPoint: metrics
            addServicesLabels: true
        
        # IngressClass configuration
        ingressClass:
          enabled: true
          isDefaultClass: true
          name: traefik
  
  destination:
    server: https://kubernetes.default.svc
    namespace: traefik
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m